import { Supadata } from '@supadata/js';

// Initialize the client
const supadata = new Supadata({
    apiKey: 'sd_cf39c3a6069af680097faf6f996b8c16'
});

async function testBatchStatus() {
    const jobId = 'aadd0959-70f3-46e4-bd1b-caa45f72b293';
    
    console.log('üîç [TEST] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã supadata.youtube.batch:');
    console.log(Object.getOwnPropertyNames(supadata.youtube.batch));
    console.log(Object.keys(supadata.youtube.batch));
    
    console.log('\nüîç [TEST] –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ç–æ—Ç–∏–ø:');
    console.log(Object.getOwnPropertyNames(Object.getPrototypeOf(supadata.youtube.batch)));
    
    console.log('\nüîç [TEST] –í—Å–µ –º–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞:');
    let obj = supadata.youtube.batch;
    while (obj) {
        console.log('–£—Ä–æ–≤–µ–Ω—å:', Object.getOwnPropertyNames(obj));
        obj = Object.getPrototypeOf(obj);
        if (obj === Object.prototype) break;
    }
    
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –º–µ—Ç–æ–¥–æ–≤
    const methods = ['getJobStatus', 'status', 'get', 'getStatus', 'jobStatus'];
    
    for (const method of methods) {
        console.log(`\nüß™ [TEST] –ü—Ä–æ–±—É–µ–º –º–µ—Ç–æ–¥: ${method}`);
        if (typeof supadata.youtube.batch[method] === 'function') {
            console.log(`‚úÖ [TEST] –ú–µ—Ç–æ–¥ ${method} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!`);
            try {
                const result = await supadata.youtube.batch[method](jobId);
                console.log(`‚úÖ [TEST] –†–µ–∑—É–ª—å—Ç–∞—Ç ${method}:`, result);
                break;
            } catch (error) {
                console.log(`‚ùå [TEST] –û—à–∏–±–∫–∞ ${method}:`, error.message);
            }
        } else {
            console.log(`‚ùå [TEST] –ú–µ—Ç–æ–¥ ${method} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
    }
    
    // –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π HTTP –∑–∞–ø—Ä–æ—Å
    console.log('\nüåê [TEST] –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π HTTP –∑–∞–ø—Ä–æ—Å:');
    try {
        const response = await fetch(`https://api.supadata.ai/v1/youtube/batch/${jobId}`, {
            headers: {
                'x-api-key': 'sd_cf39c3a6069af680097faf6f996b8c16'
            }
        });
        
        console.log(`üì° [TEST] HTTP —Å—Ç–∞—Ç—É—Å: ${response.status}`);
        const data = await response.json();
        console.log(`üìÑ [TEST] HTTP –æ—Ç–≤–µ—Ç:`, data);
        
    } catch (error) {
        console.log(`‚ùå [TEST] HTTP –æ—à–∏–±–∫–∞:`, error.message);
    }
}

testBatchStatus().catch(console.error);